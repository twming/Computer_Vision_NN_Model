Activity 2.1/2.2 Raspberry Pi Installation
----------
# Create yoloenv environment
cd ~
mkdir yolo
cd yolo
python -m venv  yoloenv
source yoloenv/bin/activate

# Pull the yolov5 code
git clone https://github.com/ultralytics/yolov5  
cd yolov5
pip install -r requirements.txt




Activity 2.3: Using OpenCV and Camera
----------
# Save as capture_video.py
# Run the code, python capture_video.py 
import cv2 as cv

cap = cv.VideoCapture(0)
while True:
    ret, frame = cap.read()
    if not ret:
        print("Can't receive frame (stream end?). Exiting ...")
        break
    gray = cv.cvtColor(frame, cv.COLOR_BGR2GRAY)
    cv.imshow('frame', gray)
    if cv.waitKey(1) == ord('q'):
        break
cap.release()
cv.destroyAllWindows()


# Save as save_video.py
# Run the code, python save_video.py 
import numpy as np
import cv2 as cv
cap = cv.VideoCapture(0)
fourcc = cv.VideoWriter_fourcc(*'XVID')
out = cv.VideoWriter('output.avi', fourcc, 20.0, (640,  480))

while cap.isOpened():
    ret, frame = cap.read()
    frame = cv.flip(frame, 0)

    out.write(frame)
    cv.imshow('frame', frame)
    if cv.waitKey(1) == ord('q'):
        break

cap.release()
out.release()
cv.destroyAllWindows()



Activity 3.1 Teachable Machine
----------
Go to below link, train 2 different images, let the machine recognize them
https://teachablemachine.withgoogle.com/train/image


Activity 3.2: Raspberry Pi Installation
----------
Install Raspberry Pi 4 Bullseye 32 Bits using Imager with Python 3.9



Activity 3.3: Setup environment
----------
# Create cvision environment
cd ~
mkdir cvision
cd cvision
python -m venv  cvisionenv
source cvisionenv/bin/activate




Activity 3.4 Image Classification
----------
sudo apt update
git clone https://github.com/tensorflow/examples.git

pip install argparse
pip install opencv-python==4.5.3.56
pip install protobuf==3.20.3
pip install tflite-runtime==2.13.0
pip install tflite-support==0.4.3
pip install numpy==1.20.0

cd ~/cvision/examples/lite/examples/image_classification/raspberry_pi/
rm requirements.txt
touch requirements.txt
sh setup.sh

pip list -l




Activity 3.5 Run Image Classification using Camera
----------
cd ~/cvision/examples/lite/examples/image_classification/raspberry_pi/
sudo apt install libatlas-base-dev
python classify.py



Activity 3.6 MobileNet TFLite Model
----------
https://tfhub.dev/tensorflow/lite-model/mobilenet_v2_1.0_224/1/metadata/1

python classify --model mobilenet_v2_1.0_224_1_metadata_1.tflite




Activity 4.1 Object Detection
--------
cd ~/cvision/examples/lite/examples/object_detection/raspberry_pi/
rm requirements.txt
touch requirements.txt
sh setup.sh

python detect.py



Activity 4.2 YOLO Object Detection
----------
cd ~/yolo
source yoloenv/bin/activate
git clone https://github.com/ultralytics/yolov5
cd ~/yolo/yolov5
pip install -r requirements.txt

python detect.py --source 0




Activity 4.3 YOLO v5 TFLite Model
----------
https://tfhub.dev/neso613/lite-model/yolo-v5-tflite/tflite_model/1 

pip install tensorflow

python detect.py --source 0 --weights lite-model_yolo-v5-tflite_tflite_model_1.tflite



Activity 4.4: Image Segmentation Setup
----------
cd ~/csvision/examples/lite/examples/image_segmentation/raspberry_pi/
rm requirements.txt
touch requirements.txt
sh setup.sh
python segment.py



Activity 4.5: Image Segmentation with MobileNetV2
----------
https://tfhub.dev/sayakpaul/lite-model/mobilenetv2-dm05-coco/int8/1

python segment.py --model lite-model_mobilenetv2-dm05-coco_int8_1.tflite




